

////////////////// Масивы /////////////////



// const clients = ["Mango", "Poly", "Ajax"];

// console.log(clients[2]);
// // кавычками в консоле можно выбрать елемент который надо показать

// clients[3] ="Start"; //можно добавлять елементы
// console.log(clients);



// Методы  

//1) split / join         
// const x ="i love mam";
// console.log(x.split());
// join
// const clients = ["Mango", "Poly", "Ajax"];

// // Сошьет все элементы массива в строку,
// // между каждой парой элементов будет указанный разделитель
// console.log( clients.join(" ")); // "Mango Poly Ajax"
// console.log( clients.join(",")); // "Mango,Poly,Ajax"
// console.log( clients.join("-")); // "Mango-Poly-Ajax"

// 2) indexOf и includes
// array.indexOf(x) - возвращает первый индекс, 
//в котором элемент x был найден в массиве, или число -1, 
//если такого элемента нет. Используйте indexOf тогда, 
//когда необходимо получить непосредсвенно индекс элемента.

// array.includes(x) - определяет, содержит ли массив некоторый элемент x, возвращая true или false соответственно. Используйте includes тогда, когда необходимо проверить есть ли элемент в массиве и не важен его порядковый номер.

// const clients = ["Mango", "Ajax", "Poly", "Chelsey"];


// console.log( clients.indexOf('Poly') ); // 2
// console.log( clients.indexOf('Monkong') ); // -1
// console.log( clients.includes('Poly') ); // true
// console.log( clients.includes('Monkong') ); // false

// 3) push, pop, shift, unshift
// push  Добавляет елемент вконце
// pop   Удалить последний елемент 
// shift  добавить вначале
// unshift убрать вначале

// Пример:
// const users = ["Mango", "Poly", "Ajax"];
// users.push ("Hello");
// console.log(users);


// 4)slice   
// Правило  .slice(begin, end) - копирует элементы от begin, до end (не включая end).
// Если не указать begin и end –
//  копирование будет с начала массива, с индекса 0, тоесть скопируется весь массив.

// const x = ["Mango", "Ajax", "Poly", "Chelsey"];
// console.log(x.slice(1,3)); Он вырезал елекент 1,2 а 3 он не включает так как он последний!
// если не указать ничего сделает полную копию массива!!

// 5).splice - позволяет вставлять новые элементы в произвольное место массива. 
// Однако можно использовать этот метод для удаления и замены существующих элементов. 
// Это швейцарский нож для работы с массивами, в том случае если исходный массив необходимо изменить.

//Сплайз изменяет масив когда вырезает елементы,  Слайз не изменяет. отличие
// Другими словами Сплайз вырезает и показывает то что осталось, слайз наоборот, то что вырежет то и покажет.
// Чтобы удалить элементы в массиве, вы передаете два аргумента методу
//  splice следующим образом: Array.splice(position, num).
// Аргумент position указывает позицию (индекс) первого 
// элемента для удаления, а аргумент num определяет количество удаляемых элемента.

// 5,2) Сплайзом можно и вставлять елементы

// Array.splice(position, 0, new_element_1, new_element_2, ...)
// ПРАВИЛО
// Аргумент position указывает начальную позицию в массиве, в которой будут вставлены новые элементы.
// Второй аргумент равен нулю 0, он говорит методу не удалять какие-либо элементы.
// Третий, четвертый и все последующие аргументы - это новые элементы, которые вставляются в массив.

// Например

// const colors = ['red', 'green', 'blue'];

// colors.splice(2, 0, 'purple');
// console.log(colors); 
// colors.splice(1, 0, 'yellow', 'pink');

// Замена элементов Сплайсом

// const x = ["Mango", "Ajax", "Poly", "Chelsey"];
// console.log(x);
// x.splice (1, 1, "Gora");  Заменили  Ajax на  Gora
// console.log(x);


// 6)concat

// Метод concat(x) используется для объединения двух или более массивов.
//  Этот метод не изменяет исходный массив массив, а возвращает новый массив.

//  const clients = ["Mango", "Ajax", "Poly", "Chelsey"];
// const newArr = clients.concat(["Monkong", "Singu"]);

// console.log(newArr);
// // ["Mango", "Ajax", "Poly", "Chelsey", "Monkong", "Singu"]

// console.log(clients);
// // ["Mango", "Ajax", "Poly", "Chelsey"]

// reverse
// Еще один полезный метод это Array.reverse, 
// все что он делает это меняет порядок элементов в массиве на противоположный,
//  при этом изменяя исхожный массив.

// const fruits = ["Banana", "Orange", "Apple", "Mango"];
// fruits.reverse();
// console.log(fruits); // ["Mango", "Apple", "Orange", "Banana"]
// isArray
// Для того чтобы узнать является ли 
// значение переменной массивом, есть метод Array.isArray. 
// Отвечает на вопрос "Это массив?" и возвращает true или false.
//  Вызов этого метода немного отличается от предыдущих.

// const fruits = ["Banana", "Orange", "Apple", "Mango"];
// const age = 20;

// console.log( Array.isArray(fruits) ); // true
// console.log( Array.isArray(age); ); // fal


//////////////////////////////////////////////////////////////////////////
///////////////////////////////  ЦЫКЛЫ  /////////////////////////////////

// Для многократного повторения одного участка кода – предусмотрены циклы
//  Итерация - единичное выполнение тела цикла.
//  Тело цикла - последовательность инструкций, предназначенная для многократного исполнения
/////////////////////////   Цикл while ////////////////

// while(expression) {
//     // код, тело цикла (statement)
//   }

///////////// Правило
//   Оператор while вычисляет expression перед каждой итерацией цикла.
//   Если expression принимает значение true, оператор while выполняет statement.
//   Если expression оценивается как false,
//  выполнение цикла прерывается и скрипт продолжает выполнять инструкции после цикла while.

/////////////////////////////////////////////////////////////////////////
// let counter = 0;
// while (counter <= 5){
//   console.log(counter); 
// counter++;
// }     
/// Если выполняется условия  (counter <= 5)  === true тогда выведет все правдивые зачения
//  1
//  2
//  3
//  4
//  5
// 6 уже не зайдет он вне условия, если лог поставить за цыклом покажет 6

// let x = [[2,3,1],[6868]];
// console.log(x[0]);


//////////////// Способ как сделать маленькую букву в масиве из строк

// const logins = [`Mango`, `Argun`, `Iota`]
// let str = logins[0];
// const arr = str.split("");  // ["M", "a", "n", "g", "o"]
// console.log(arr);
// arr[0]=arr[0].toLowerCase(); //arr[0] - это [`M`] приравниваем "=" к  `м`/ заменяем
// str = arr.join("");    //  mango
// console.log(str);      //  mango

// logins[0]=str;
// console.log(logins);// ["mango", "Argun", "Iota"] вставляем обратно строку в массив
                               

////////////////////// Лекция от Вовы///////////////////////////////////

///////////////////////   FOR   ////////////////////////////////

// Итераторы по традиции называются буквами i/j/k

// Самый простой пример цыкла//////

// const number = 10;
// for(let i = 0; i < number; i += 1) {
//   console.log(i);
// }

/////////////////////////////////////

//for (let i=0; i<5; i++)  //(условие,как будет менятся,проверка)

// Let arr = [5,10,25,65,95];
// for (Let i=0; max=arr.length < max;i++){
// console.log(arr[i]);
// }

// пользуемся или for или for of

//el сюда попадают елементы массива
//of за ним ставится сам масив
// for( Let el of arr){

// }
 
/////////////////////////////////////////////
// let  i;

// for (i = 0; i < 3; i++) {
//   alert( i );
// }
// Здесь:
// Начало: i=0.
// Условие: i<3.
// Шаг: i++.
// Тело: alert(i), 
//т.е. код внутри фигурных скобок (они не обязательны, если только одна операция)

/////////////////////////////////////////////


//Интерация это проход по цыклу, один ход

// Как выключить цыкл?
// break - полностью останавливаем цыкл

// let arr = [ 5, 10, 25, 65, 95];
// for (let i=0, max=arr.length; i < max;i++){

//         if (arr [i] ===25){
//         break;
//         // continue; 
// }
//         console.log(arr[i]);
//         }

// let result = []

// for (let i=0; i<3; i++) {
//    let arr = [];     
//    for (let j=0; j<2;j++){
//          arr.push(j);
//    }
//    result.push(arr);              -//  Мы получим длинну масива
//   }
// console.log(result);

// как работает цыкл в цыкле

// Пока вложеный цыкл с жеем не закончится цыкл не закончится

///////////////////////////////////////////////

//  let result = [];
//  for (let i=0; i<3; i++) {    // главный цыкл, сколько укажим столько и будет вложенных массивов
//            let arr = [];     //внутренний массив
//            for (let j=0; j<5;j++){    //внутрений цыкл
//                  arr.push(j);         //push добовляем и выводим елементы
//            }
//            result.push(arr);        //  Мы получим длинну масива. Пушим элементы во вложенный масив
//           }
// console.log(result);

// let counter = 0;
// while (counter < 10) {
//   console.log(counter);
//   // запись counter += 1 аналогична counter = counter + 1
//   counter += 1;
// }
//  Данный пример выведеть значения от 0 до 9


// let clientCounter = 18;
// const maxClients = 25;

// while(clientCounter < maxClients) {   //Это условие цыклв
//   console.log(clientCounter);
//   clientCounter += 1;               //Это шаг хода
// }
// Результат будет выводить цыфры от 18 до 24

//////////////////////////////////////////

// // Переберем массив клиентов и выведем их имена
// const clients = ["Mango", "Ajax", "Poly"];
// let i = 0;

// while (i < clients.length) {
//   console.log('Logging clients: ', clients[i]); 
//   //выведет строку + эелементы массива по очереди
//   i += 1;
// }
// выведет следующие:

// Logging clients:  Mango
// Logging clients:  Ajax
// Logging clients:  Poly

/////////////////////////////////////////////

// // С помощью цикла можно заполнять массив данными
// const numbers = [];  //пустой масси
// let num = 0;            //переменная
// while (num < 10) {      //начало цыкла с условием
//   numbers.push(num);      //выводим новый num  который увеличиватся на +1
//   num += 1;
// }
// console.log("numbers: ", numbers);

// Результат:
// numbers:  
// (10) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
// 0: 0
// 1: 1
// 2: 2
// 3: 3
// 4: 4
// 5: 5
// 6: 6
// 7: 7
// 8: 8
// 9: 9
// length: 10


//////////////////////////////////////

// do...while Выполняется до тех пора по то что в кавычках в while не станет false
// do {
//         // statement
//       } while();

// Тело (выражение, statements) 

// Понятный пример по ду вайлу

// let input = 0;

// do {
//   input = Number( prompt('Введите число больше 10', '') );
// } while(input <= 10);

// Результат: выскочить промпт, если начажать меньше ил равно 10 попросить еще раз ввести
// // если больеш то цыкл закончится
// Т.е при выполнении while возврат к условию do, при не выполнении ок все заканчивается

////////////////////////////////////////////Задача от Вовы/////////////////////

// Задача создать массив с командами людей // максимум можно создать 6 команд.
/// результат нужно показатся по масивам. не можно повторять именна
///пользователь
// 1) Пользователь вводит количество команд
// 2) Пользователь вводит количество людей в команде
// 3) Программа рандомно наполняет масивы именами
// 4) Имена не должны повторятся


// let namesArr = ['Albert','Isaac', 'Galileo', 'Marie', 
// 'Johannes', 'Nicolaus', 'Max', 'Katherine', 'Ada', 'Sarah', 'Lise','Hanna'];
// let namesArrCopy = namesArr.slice();  // копируем верхний масив, чтобы не мутировать оригинал

// let team = []; //создаем пустой массив, для основного цыкла
// let x = Number(prompt ( "Ведите количество команд"));
// let y = Number(prompt ( "Ведите количество людей в команде"));

// for (i=0; i<x; i++){
//   let subTeam =[]; //создаем пустой массив, для внутренего цыкла
//     for (j=0; j<y; j++){
//     let randomMain = Math.floor(Math.random()*(namesArrCopy.length-1));
//     // console.log(randomMain);
// // Здесь я увижу, при вводе чисел 3 и 4 мне покажет 3 группы по 4 случайных чисел
//     subTeam.push(namesArrCopy[randomMain]); //Здесь мне запушит 3 групу по 1 имя в subTeam
//     //console.log(subTeam.push);
//     namesArrCopy.splice(randomMain,1); //Здесь удаляем 1 имя для следующей интерации
//     // которое уже было введено в subTeam 
//   }  
//   team.push(subTeam); // с помощью этой команды выводим результат внутренего цыкла

//   console.log(team);
//  }


///   второй вариант

// let namesArr = ['Albert','Isaac', 'Galileo', 'Marie', 
// 'Johannes', 'Nicolaus', 'Max', 'Katherine', 'Ada', 'Sarah', 'Lise','Hanna'];
// let namesArrCopy = namesArr.slice();  // копируем верхний масив, чтобы не мутировать оригинал

// let team = []; //создаем пустой массив, для основного цыкла
// let x = Number(prompt ( "Ведите количество команд"));
// let y = Number(prompt ( "Ведите количество людей в команде"));

// for (i=0; i<x; i++){
//   let subTeam =[]; //создаем пустой массив, для внутренего цыкла
//     for (j=0; j<y; j++){
//     let randomMain = Math.floor(Math.random()*(namesArrCopy.length-1));
//     let randomName copy=[randomMain];
//     subTeam.push(randomName);
//      namesArrCopy.splice(randomMain,1); 
//   }  

//   team.push(subTeam); // с помощью этой команды выводим результат внутренего цыкла

//   console.log(team);
//  }
////////////////////////////////////////////////////Zadacha2///////////

// let number = prompt();
// let sum = 0;
// let resalt = [];

// for (let i=0; i <number; i++){
//  let goods = prompt ("Enter good name price (name:price)");
//  let priceIndex = goods.indexOf(":");
//  let price = goods.substr(priceIndex+1);
// //  console.log(price);

// sum += Number(price);
 
// }
// alert(sum);

////////////////////////////////////////////////////Zadacha3///////////
// 1) Данно оригинальний масив let arr = [5,10,15,20,25,30,35,40];
// 2) Данно масив з остатком let result = [10,20,35];
// 3) Получить масив удаленых чисел; // [5,15,25,30,40]; Результат работы

//Задача. Сравнить 2 цыкла. ризал и арр. 
//Все что есть в ризальте не должно быть в новом масиве.

// let arr = [5,10,15,20,25,30,35,40];
// let result = [10,20,35];

// let test = [];

// for (let x of arr){ 
//    if(!result.includes(x)) test.push(x); 
 // пушем мы добовляем в масив test число которое проходило проверку
//    // (!result.includes(x)) 
//задается вопрос 5 есть в резалте, если нету то он его внесет
// // (result.includes(x)) все цыфры которых есть в ааре будут и в резальте, по фатку резалт не изменится
//   }
// console.log(test)

////////////////////////////////////////////////////Zadacha3 от Вовы///////////

// Написать програму которая находит разницу значений двух масивов
// 1) [1, 2, 3], [100, 2, 1, 10] // [3, 10, 100]

// let arr = [1, 2, 3];
// let second = [100, 2, 1, 10];

// let result = [];

// for (let el of arr){             ///(переменная of объект)
//  if  (!second.includes(el)){
//   result.push(el); }
// }

// for (let el of second){           
//  if  (!arr.includes(el)){
//   result.push(el); 
//  }
// }
// console.log(result);

////////////////////////////////////////////////////Zadacha4 от Вовы///////////
// Написать код которий виводит уникальные елементы масива.
// 1)let arr = [1,2,5,10,12,5,3,2,8,3];
// 2) Получить масив уникальных значений // [1,10,12,8]

// let arr = [1,2,5,10,12,5,3,2,8,3];
// let uniq =[];
// for (let el of arr){
//   let count = 0;
//   for (let otherEl of arr){
//     if (el === otherEl){
//       count++;
//     }
//   }
//   if (count ===1){
//     uniq.push(el)
//   }
// }
// console.log(uniq);


/////////////////////////////////length/////////////////////////////

// length показует цыфру

//  const clients = ["Mango", "Poly", "Ajax"];

// // length вернет текущую длину массива
// console.log(clients.length); // 3


/////////////////////indexOf и includes/////////////////////

// перемееная массива.indexOf(название элемента)
//   Показывает результат -  Покажет какой  в очереди элемент в виде числа.

// перемееная массива.includes(название проверяемого элемента)
// Показывает результат - true или false. Т.е. правда ли элемент есть элементов масива




/////////////////////////////////////  training    //////////////


// let x = [1, 2, 3, 4, 5];
// let y = x.splice(2, 2, 6, 7); // пойди со второго выреж 2 элемента и замени их на 6 и 7
// console.log(y);

/////////////////////////////  задачи по 2 модулю //////////////////

/////////////////////1

/*
  Есть массив имен пользователей.
  В первом console.log вывести длину массива.
  
  В последующих console.log дополнить конструкцию
  так, чтобы в консоль вывелись указаные в комментариях 
  элементы массива.
*/

// const users = ['Mango', 'Poly', 'Ajax', 'Chelsey'];

// let arr = users.length;

// console.log(arr); // 4

// console.log(users[0]); // Poly
// console.log(users[1]); // Chelsey
// console.log(users[2]); // Mango
// console.log(users[3]); // Ajax

//////////////////////2

// // /* Есть массив имен пользователей */

// const users = ["Mango", "Poly", "Ajax", "Chelsey"];

// // /* Используя методы массива, последовательно выполнить следующие операции */

// // // Удалить из начала массива нулевой элемент

// let arr = users.shift();   // здесь теперь   ["Poly", "Ajax", "Chelsey"]

// console.log(users); // ["Poly", "Ajax", "Chelsey"]

// // // Удалить из конца массив последний элемент

// let arr2 = users.pop();  // ["Poly", "Ajax"] сюда он приходит уже измененный

// console.log(users); // ["Poly", "Ajax"]

// // // Добавить в начало массива любое имя

// let arr3 = users.unshift("Gary");  // ["Gary", "Poly", "Ajax"] добавил новое имя

// console.log(users); // ["Gary", "Poly", "Ajax"]

// // // Добавить в конец массива два любых имени за одну операцию

// let arr4 = users.push("Gorg","Helen");

// console.log(users); //  ["Gary", "Poly", "Ajax", "Gorg", "Helen"]

/////////////////////////////////3


/*
  Попросить пользователя ввести произвольную строку
  и записать ее в переменную string
  
  PS: для перебора массива используте цикл for или for...of
*/

// let string = "Hello is frend";
// let arr = string.split(" ");   /// делаем массив со строками ["Hello", "is", "frend"]
// console.log(arr);


// Разбить строку в массив, пусть разделителем будет пробел, 
//и записать в переменную arr
 // Вывести в консоли общую длину массива arr

// Используя цикл, вывести в консоль все индексы массива arr

//  for (let x of arr){
//      console.log(arr.indexOf(x));  // пойди в масив и покажи мне все индексы элементов(проиндексируй)
//  }


//  // Используя цикл, вывести в консоль все элементы массива arr

//  for (let i =0; i<arr.length; i++){ 
//  // создаем пермеенную которая начнет перебиратьпо по одному все элементы массива
//  //и в итоге покажет их в консоле
//      console.log(arr[i]);  /// без этой функции i не поймет где ему надо перебирать, и что выводить
//  }


// // Используя цикл, bывести в консоли все пары индекс:значение массива arr
// for (let i =0; i<arr.length; i++){
//     console.log("Элемент массива "+arr[i]+" индекс массива "+i);
// }

//////////////////////////////////4

/*
  Напишите цикл, который предлагает, через prompt, ввести число больше 100. 
   Если посетитель ввёл другое число или нажал Cancel – попросить ввести ещё раз, 
   и так далее, пока не введет число больше 100.
  Предполагается, что посетитель вводит только числа, обрабатывать невалидный ввод 
  вроде строк 'qweqwe' в этой задаче необязательно.
  PS: используйте цикл do...while
*/
//  let arr;
//  do {
// arr = Number(prompt("Введите число больше 100"));/// сдесь пишем что нужно сделать 
//  } while(arr>=100)  /// делай пока не выполнится  это условие, если больше ста то тру, 
//  //если меньше то волс и показывать больше не надо промт

//  console.log(arr); 

/////////////////////////5
/*
  Напишите скрипт, который выводит через console.log все 
  числа от min до max, с двумя исключениями:   
    - Для чисел, нацело делящихся на 3, вместо числа выводится строка 'Fizz'
    - Для чисел, нацело делящихся на 5, но не на 3, вместо числа выводится строка 'Buzz' 
  PS: используйте цикл for
*/

// const min = 1;
// const max = 100;
// let x ;

// for (let i=min; i<max; i++){      /// после это команды он выведет все числа от 1 до 100
// //    console.log(i);
// if (i%3 ===0) {                 //здесь заменит в с е что делится на 3
//     console.log("Fizz");   
// } else if (i%5===0){
//     console.log("Buzz");     //здесь заменит в с е что делится на 5
// }else {
//     console.log(i+" Не делится не на 3 и не на 5");  
// }
// }

////////////////////6

/*
  Напишите скрипт, который выбирает из массива numbers 
  все числа, которые больше чем значение переменной num, 
  записывая эти числа в массив newArray.   
  В результате в массиве newArray будут все подходяшие числа.
      
  PS: используйте цикл for или for...of и оператор ветвления if
*/

// const numbers = [1, 3, 17, 5, 9, 14, 8, 14, 34, 18, 26];
// const num = 10;
// const newArray = [];

// for (let el of numbers){   //создаем перм для проверки масива, оно же условие
//     if (el>num){      ///говорим: елемент, если ты окажешься больше 10 то прыгай в массив
//         newArray.push(el);
//         console.log(newArray);
//     } 
// }

////////////////////7

/*
  Напишите скрипт, который проверяет произвольную строку 
  в переменной string и находит в ней самое длинное слово,
  записывая его в переменную longestWord.
*/

// const string = "May the force be with you";
// let longestWord;
// let arrMass = string.split(" ");   //["May", "the", "force", "be", "with", "you"]
// let max = 0;                 // создаем счетчик, т.е. с чес сравнивать будем i(елемент масива)

///////// Первый способ/// в нем i чмсло, и перебирает он масив как числа,t.e просто чилос 3

//  for ( let i = 0; i<arrMass.length; i++){
//   if (arrMass[i].length > max){  
     // говорим возьми сначала первый эелемент в цыфре(не буквах) и сравни с 0
//     max=arrMass[i].length;  // если больше перепеши новый и макс и снова сравни
//     console.log(max);  
//     longestWord=arrMass[i];  
//     console.log(longestWord);
//   }
//  }

// ///////// Второй способ/// в нем i слово, и перебирает длинну слова .е. слово из 3 букв
//  for ( let i of arrMass ){
//     if (i.length > max){
//       max=i.length;
//       console.log(max);
//       longestWord=i;
//       console.log(longestWord);
//     }
//    }
//  console.log(longestWord); // 'force'

// const string = "May the for be with you confidence";
// let longestWord;

// let arr = string.split(" ");
// let max = 0;
// for (let i=0; i<arr.length; i++){
//     if(arr[i].length > max){ //говорю е у возьми первый елемент "May" в ленгсе, е.у. в числе 3
//         max=arr[i].length;  //елемент больше макс тогда перезапиши его
//         longestWord=arr[i];
//         // console.log(longestWord);  // // здесь покажет ответ May with confidence
//     }
// }
// console.log(longestWord)   // здесь покажет ответ confidence

/////////////////////////////////8
/*
  Напишите скрипт который:
  
  - Запрашивает по очереди числа при помощи prompt и сохраняет их в массиве.
    Используйте do...while.
  - Проверять что пользователь ввел не число не обязательно
  - Заканчивает запрашивать числа как только пользователь нажмёт Cancel.
  - После того как ввод был завершен, если массив не пустой, 
    скрипт выводит сумму всех значений массива: "Сумма: <сумма всех значений в массиве>"
    Используйте цикл for...of
*/
// let arr =[];
// let input;  ////Важно нужно объявить промпт ранее перед цыклом,
// // иначе не будет работать

// do{
//    input = prompt("Введите числа по очереди");  
//    arr.push(input);  
// } while (input !== null); 

// console.log(arr);

/////////////////9
/*
  ***ЗАДАНИЕ ПОВЫШЕННОЙ СЛОЖНОСТИ***
  
  Создайте игру угадай число.
  
  Есть массив чисел numbers, содержащий "верные" числа.
  Числа в массиве всегда идут по возрастанию, 1-5, 20-40, 2-100 и т.п.
  
  Просим пользователя ввести цифру от самого маленького,
  до самого большого элемента массива. Эти значения необходимо
  сохранить в переменные min и max. Учтите что массив произвольный,
  но элементы всегда идут по возрастанию.
  
  Пусть prompt говорит "Введите цифру между x и y", где x и y 
  соотвественно самый маленький и самый большой элемент массива.
  
  Но пользователь может ввести что угодно, необходимо проверить 
  что было введено. Преобразовать input в числовой тип и проверить 
  число ли это.
  
    - Если не число - выводим alert с сообщением о том, что было 
      введено не число.
    - Если число - проверить содержит ли в себе массив numbers это число.
    - Если содержит - выводим alert с сообщением 'Поздравляем, Вы угадали!'.
    - Если не содержит - выводим alert с сообщением 'Сожалеем, Вы не угадали!'.
*/

// const numbers = [12, 15, 25, 37, 41];
// let min = 0;
// let max = 50;
// let input;
// let bigNumbers;
//   for(let i=min; i<max; i++){
//     //   console.log(numbers[i]); 
//       bigNumbers=numbers[i];
      
//     input = prompt("Угадайте число от 1 до 50");
    
//     if (input!==number){
//         alert("Это не число, введите число");
//     } else if (input===bigNumbers){
//         alert("Поздравляем, Вы угадали!");
//     } else {
//         alert("Сожалеем, Вы не угадали!");
//     }
// }



// ===============================

// const arr = {
//    apple: {
//     price: 5,
//     calor: 4,
//   },
//   orange: {
//     price: 5,
//     calor: 4,
//   }
// }

// // console.log(arr);

// let dod = function(){

// for (el in arr){
// let x = arr[`el`];   
// /// должен брать значения ключей (прайс и его цена и калории и цена)
// console.log(a);
// let y = x.arr[`el`];
// //берется значения сначала прайса
// console.log(y);

// }


// }
// dod();
// console.log(dod);

///////////////// Функция подефицирует массив

// const arr = [5,6,2];

// let func = function(x){
//   // arr.push(5);
// }

// func();
// // func(arr); //функция может модефецировать массив
// console.log(arr);



////============================================

// Тренируемся

// const arr = {
//    apple: {
//     price: 5,
//     calor: 4,
//   },
//   orange: {
//     price: 2,
//     calor: 3,
//   }


// };

// // const y = arr.apple.price;
// // console.log(y);
// // const a = arr.orange;
// // console.log(a);

// const addUser = function (val){  //// такой функцией можно записывать данные в обект от юзера
//   arr.fruts += val; 
//    }
// addUser(150);
// console.log(arr);

////========================================================
              //    For ....in для  перебор ключей, никаких for...of

              // Хорошая практика (способ )перебора ключей в объекте: 
// Поехали:
// const arr = {
//    apple: {
//     price: 5,
//     calor: 4,
//   },
//   orange: {
//     price: 2,
//     calor: 3,
//   },
//   name: `aaa`,
// }
// console.log(arr);

//  for(let key in arr){  //////////key это название ключей объектов
//  let y = arr.hasOwnProperty(key);  ///Проверка на есть ли такой ключ
// if (y){
//   console.log(`${key}: ${arr[key]}`);
//  }

// console.log(key);   /////////////key это название ключей объектов
// console.log(arr[key]); ///arr[key] - это полное описание ключа со значением
// console.log(y);
// const y = arr[key];
// console.log(y);

//===================================

// const allKeys = Object.keys(arr);     //метод выводить ключи в масиве
// console.log(allKeys);

// //=========================================
// const arr = {
//    products: [
//     { name: `apple`, 
//     price: 5,
//     calor: 4,
//   },
//  { name: `orange`,
//     price: 2,
//     calor: 3,
//   }
// ],
//   manag: `aaa`,
//   name: `Alex`,
//   new (wr){
//        arr.products.push(wr);
//    }
// }
// arr.new(`cliebts`);   // способ добовлять в массив елементы-объекты
// // console.log(arr);

// const arr = {
//   x: 6,
// };

// const {
//   x: 5,
//    name: `Bob`,
//   } = arr;
// console.log(arr);



///==================================================
//                  // Слияние объетов

// const a = {name: `jjjjj`, b:5, a: `jfjfjfjj`};
// const b = {dv: `wwwwww`, b:50,e: `eeeeeeeee`};
// //////Важно, если встретит такой же ключ то он его перезапишет. Если чсило то поменяет на последнее
// const qqq = Object.assign(a,b)
// console.log(qqq);


//////========================================
log x = {
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
}

