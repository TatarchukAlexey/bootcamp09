////////////////////////  Объекты  //////////////////////////

// Это важная функция для работы с прайсами с меню и юзарами, с асортиментом

// // let a = {}  //// Это объект
// let a = {                      // Это объект              
// name :"Resort Hotel",          ///ключ
// status: "Lux",                 ///ключ
// stars: 5,                       ///ключ
// }

/// Ключ передается только в формает строки!!!!!!!!!!!!!!!!!1

// let coffe = {
//   name: "Americano",
//   type: "Arct",
//   size: "Medium",
//   sugar: true,
//   price: 25,
//   currency: "UAH",
//   // id: 35,
  
// }
// console.log(coffe.name);
// console.log(coffe.price);  // когда мы знаем точно какой есть ключ
// console.log(coffe["price"]);  // когда мы не знаем точно какой есть ключ

// coffe.price = 50;     // так мы изменяем ключ
// coffe.id = 5;         // так мы добовляем ключ если его нету

// console.log(coffe);  // 


// Сокращенная форма при вводе переменной
// let x ="Americano";
// let coffe = {
//   x,          

//////////////////Удаление

// delete(пробел)название объекта.ключ

////////////Проверка на есть ли ключ в объекте?

// let spx = "price" in hotel;  проверь если прайс в объекте
// Выдает болем тру или фолс

////////////////////////////////Как вывести все ключи в объекте? вот так
//  for (let price in cofee){          ///в первую перемееную попадает ключ объекта
//   console.log(cofee);

// for (const key in user) {   ///команда которая выводит все ключи. Логика: Создаем любую переменную
// и проверяем ее в объекте, и говорим выведи мне все ключи.
// Возьми ключи и покажи их в консоле
//     console.log('Key: ', key);  
 ///////key писать не обязательно, можно любуюу другую переменную!!
//   }

////////////// Перевод в масив объектов

// const keys = Object.keys(hotel);       // ["name", и т.д]  перевод в массив по ключам
// const values = Object.values(hotel);  // перевод  по значением ключей
// const entries = Object.entries(hotel);

////////////// Копию объекта делает так

// let copy = Object.assign({}.cofee)         // Это точная копия объекта cofee
// console.log(copy);

////////// копируем все ключи

// let copy {
//   ...cofee,    /// ... - это спред оператор
// }

///////////////////////Слияние объектов //////////////////

// Object.assign(target, ...sources), который получает список объектов sources и копирует 
// в первый target все собственные (не унаследованные) свойства из остальных
// const first = {name: 'Tony'};
// const last = {lastName: 'Stark'};

// const person = Object.assign(first, last); // кв дужках просто указываем именна объектов
// console.log(person); // {name: 'Tony', lastName: 'Stark'}




//////////////////////////////// Практика //////////////////////////

/////////////////////////////////////////#1
/*  
  Напишите скрипт, который, для объекта user, последовательно: 
  
    - добавляет поле mood со значением 'happy' 
    - заменяет значение hobby на 'javascript'
    - удаляет свойство premium

    - выводит содержимое объекта user в формате ключ:значение 
      используя цикл for...in

    - выводит содержимое объекта user в формате ключ:значение 
      используя Object.keys и for...of

    - выводит содержимое объекта user в формате ключ:значение 
      используя Object.entries и for...of
*/
const user = {
    name: "Mango",
    age: 20,
    hobby: "html",
    premium: true
  };

  user.mood ="Happy";
  console.log(user);
  
  user.hobby ="javascript";
  console.log(user);

  delete user.premium;
  console.log(user);

for (const key in user) {  
     ///команда которая выводит все ключи. Возьми ключи и покажи их в консоле
    console.log('Key: ', key);
  }

let keys  = Object.keys(user);
console.log(keys);

for (const mmm of keys) {
    console.log(mmm);
  }





/////////////////////////////////////////////2
//   /*
//   Напиште скрипт который определит и выведет в консоль 
//   имя сотрудника который выполнил больше всех задач.

//   Сотрудники и кол-во выполненых задач содержатся 
//   как свойства объекта в формате "имя":"кол-во задач"
// */

// const tasksCompleted = {
//     ann: 29,
//     david: 35,
//     helen: 1,
//     lorence: 99
//   };
  
  /////////////////////////////////////////////////3
  
/*  
  Напишите функцию countProps(obj),
  считающую кол-во свойств в объекте.
  Функция возвращает количество свойств.
*/

// // Вызовы функции для проверки
// console.log(
//     countProps({})
//   ); // 0
  
//   console.log(
//     countProps({a: 1, b: 3, c: 'hello'})
//   ); // 3

///////////////////////////////////////////////////4

/*  
  Создайте функцию isObjectEmpty(obj), которая получает 
  один аргумент obj - объект, и проверяет пуст ли он (есть ли в нем свойства).
  
  Возвращает true если объект пустой, false если не пустой.
*/

// // Вызовы функции для проверки
// console.log(
//     isObjectEmpty({})
//   ); // true
  
//   console.log(
//     isObjectEmpty({a: 1})
//   ); // false
  
//   console.log(
//     isObjectEmpty({a: 1, b: 2})
//   ); // false
  

///////////////////////////////////////////5

/*  
  Напишите функцию countTotalSalary(salaries),
  получающую объект и считающую общую сумму запрплаты работников.
  
  Каждое поле объекта передаваемого в функцию, имеет вид "имя":"зарплата"
  
  Функция возвращает общую сумму зарплаты.
*/

// // Вызовы функции для проверки
// console.log(
//     countTotalSalary({})
//   ); // 0
  
//   console.log(
//     countTotalSalary({
//       mango: 100,
//       poly: 150,
//       alfred: 80
//     })
//   ); // 330